Implementing Google Tag Manager (GTM) in React Without Nonce
If you don't need to use a nonce (or are having issues with the nonce implementation), here's how to implement GTM in your React application using react-gtm-module:

Basic Implementation (Simplest Approach)
1. Install the package
bash
npm install react-gtm-module
# or
yarn add react-gtm-module
2. Initialize GTM in your main App component
jsx
// src/App.js
import React, { useEffect } from 'react';
import TagManager from 'react-gtm-module';

function App() {
  useEffect(() => {
    TagManager.initialize({
      gtmId: 'GTM-XXXXXXX' // Replace with your GTM ID
    });
  }, []);

  return (
    <div className="App">
      {/* Your application content */}
    </div>
  );
}

export default App;
Alternative Implementation (More Control)
1. Create a dedicated GTM component
jsx
// src/components/GTM.js
import React, { useEffect } from 'react';
import TagManager from 'react-gtm-module';

const GTM = ({ gtmId }) => {
  useEffect(() => {
    if (gtmId) {
      const tagManagerArgs = {
        gtmId,
        dataLayerName: 'dataLayer' // Optional - rename dataLayer if needed
      };
      TagManager.initialize(tagManagerArgs);
    }
  }, [gtmId]);

  return null; // This component doesn't render anything
};

export default GTM;
2. Use the component in your App
jsx
// src/App.js
import React from 'react';
import GTM from './components/GTM';

function App() {
  return (
    <div className="App">
      <GTM gtmId="GTM-XXXXXXX" />
      {/* Your application content */}
    </div>
  );
}

export default App;
Manual Implementation (Without react-gtm-module)
If you prefer not to use the package:

1. Create a custom GTM hook
jsx
// src/hooks/useGTM.js
import { useEffect } from 'react';

const useGTM = (gtmId) => {
  useEffect(() => {
    if (gtmId && typeof window !== 'undefined') {
      // Add dataLayer if it doesn't exist
      window.dataLayer = window.dataLayer || [];
      
      // Push initial event
      window.dataLayer.push({
        'gtm.start': new Date().getTime(),
        event: 'gtm.js'
      });
      
      // Create and inject the script
      const script = document.createElement('script');
      script.async = true;
      script.src = `https://www.googletagmanager.com/gtm.js?id=${gtmId}`;
      document.head.appendChild(script);
      
      // Create noscript fallback
      const noscript = document.createElement('noscript');
      const iframe = document.createElement('iframe');
      iframe.src = `https://www.googletagmanager.com/ns.html?id=${gtmId}`;
      iframe.height = '0';
      iframe.width = '0';
      iframe.style.display = 'none';
      iframe.style.visibility = 'hidden';
      noscript.appendChild(iframe);
      document.body.insertBefore(noscript, document.body.firstChild);
    }
  }, [gtmId]);
};

export default useGTM;
2. Use the hook in your App component
jsx
// src/App.js
import React from 'react';
import useGTM from './hooks/useGTM';

function App() {
  useGTM('GTM-XXXXXXX'); // Your GTM ID here

  return (
    <div className="App">
      {/* Your application content */}
    </div>
  );
}

export default App;
Pushing Custom Events to DataLayer
To send custom events to GTM:

jsx
// Example component sending an event
import React from 'react';

const ProductView = ({ product }) => {
  React.useEffect(() => {
    if (typeof window !== 'undefined' && window.dataLayer) {
      window.dataLayer.push({
        event: 'productView',
        productId: product.id,
        productName: product.name,
        productPrice: product.price
      });
    }
  }, [product]);

  return (
    <div>
      {/* Product display */}
    </div>
  );
};

export default ProductView;
Important Notes
GTM ID: Always replace 'GTM-XXXXXXX' with your actual GTM container ID

SSR Compatibility: For Next.js or SSR apps, wrap GTM initialization in useEffect or check typeof window !== 'undefined'

Performance: Consider lazy-loading GTM if it's not critical for initial page load

Content Security Policy: If you have CSP headers, you'll need to allow https://www.googletagmanager.com

This implementation will work without nonce values while still providing all the functionality of GTM in your React application.
