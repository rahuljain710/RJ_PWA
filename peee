const [contentHitsState, setContentHitsState] = useState(
  secondaryindices.map(() => 0)
);

// Create the arrays from state
const contenthitcountarray = contentHitsState;
const setcontentHitscountArray = contentHitsState.map((_, index) => (newValue) => {
  setContentHitsState(prev => {
    const newArray = [...prev];
    newArray[index] = newValue;
    return newArray;
  });
});

const [productHitCount, setProductHitCount] = useState(false);




const [contentHitsState, dispatch] = useReducer(
  (state, action) => {
    switch (action.type) {
      case 'UPDATE_HIT':
        const newArray = [...state];
        newArray[action.index] = action.value;
        return newArray;
      case 'RESET':
        return action.initialValues;
      default:
        return state;
    }
  },
  secondaryindices.map(() => 0)
);

const updateContentHitCount = (index, value) => {
  dispatch({ type: 'UPDATE_HIT', index, value });
};

const contenthitcountarray = contentHitsState;
const [productHitCount, setProductHitCount] = useState(false);
