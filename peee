const [contentHitsState, setContentHitsState] = useState(
  secondaryindices.map(() => 0)
);

// Create the arrays from state
const contenthitcountarray = contentHitsState;
const setcontentHitscountArray = contentHitsState.map((_, index) => (newValue) => {
  setContentHitsState(prev => {
    const newArray = [...prev];
    newArray[index] = newValue;
    return newArray;
  });
});

const [productHitCount, setProductHitCount] = useState(false);



const [contentHitsState, setContentHitsState] = useState(
  secondaryindices.map(() => 0)
);

// Single update function instead of array of setters
const updateContentHitCount = useCallback((index, newValue) => {
  setContentHitsState(prev => {
    const newArray = [...prev];
    newArray[index] = newValue;
    return newArray;
  });
}, []);

const contenthitcountarray = contentHitsState;
const [productHitCount, setProductHitCount] = useState(false);

// Usage: updateContentHitCount(index, value) instead of setcontentHitscountArray[index](value)
